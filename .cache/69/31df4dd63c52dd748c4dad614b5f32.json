{"id":"main.js","dependencies":[{"name":"D:\\VsCode\\regexp\\package.json","includedInParent":true,"mtime":1623068759198}],"generated":{"js":"console.log(123); // const regexp1 = new RegExp(\"^abc\")\n// // new RegExp(표현식)\n// const regexp2 = new RegExp(\"^abc\", \"gi\")\n// // new RegExp(표현식, 플래그)\n// const regexp1 = /^abc/;\n// // /표현식/\n// const regexp2 = /^abc/gi\n// 표현식/플래그\n// 정규표현식\n\nvar str = \"\\n010-1234-5678\\nhello@gmail.com;\\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\\nThe quick brown fox jumps over the lazy dog.\\nabbcccdddd\\n\"; // 대소문자 따져서 검색\n// 생성자 방식\n// const regexp = new RegExp('the', 'g')\n// 리터럴 방식\n\nvar regexp = /the/g;\nconsole.log(str.match(regexp)); // 대소문자 안가리고 검색\n// 생성자 방식\n// const regexp2 = new RegExp('the', 'gi')\n// 리터럴 방식\n\nvar regexp2 = /the/gi;\nconsole.log(str.match(regexp2));"},"sourceMaps":{"js":{"mappings":[{"name":"console","generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":7},"source":"main.js","original":{"line":1,"column":7}},{"name":"log","generated":{"line":1,"column":8},"source":"main.js","original":{"line":1,"column":8}},{"generated":{"line":1,"column":11},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":12},"source":"main.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":15},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":18},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"name":"str","generated":{"line":11,"column":4},"source":"main.js","original":{"line":16,"column":6}},{"generated":{"line":11,"column":7},"source":"main.js","original":{"line":16,"column":9}},{"generated":{"line":11,"column":156},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":11,"column":158},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"name":"regexp","generated":{"line":16,"column":4},"source":"main.js","original":{"line":27,"column":6}},{"generated":{"line":16,"column":10},"source":"main.js","original":{"line":27,"column":12}},{"generated":{"line":16,"column":13},"source":"main.js","original":{"line":27,"column":15}},{"generated":{"line":16,"column":19},"source":"main.js","original":{"line":27,"column":0}},{"name":"console","generated":{"line":17,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":17,"column":7},"source":"main.js","original":{"line":28,"column":7}},{"name":"log","generated":{"line":17,"column":8},"source":"main.js","original":{"line":28,"column":8}},{"generated":{"line":17,"column":11},"source":"main.js","original":{"line":28,"column":0}},{"name":"str","generated":{"line":17,"column":12},"source":"main.js","original":{"line":28,"column":12}},{"generated":{"line":17,"column":15},"source":"main.js","original":{"line":28,"column":15}},{"name":"match","generated":{"line":17,"column":16},"source":"main.js","original":{"line":28,"column":16}},{"generated":{"line":17,"column":21},"source":"main.js","original":{"line":28,"column":12}},{"name":"regexp","generated":{"line":17,"column":22},"source":"main.js","original":{"line":28,"column":22}},{"generated":{"line":17,"column":28},"source":"main.js","original":{"line":28,"column":12}},{"generated":{"line":17,"column":29},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":17,"column":32},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"name":"regexp2","generated":{"line":22,"column":4},"source":"main.js","original":{"line":34,"column":6}},{"generated":{"line":22,"column":11},"source":"main.js","original":{"line":34,"column":13}},{"generated":{"line":22,"column":14},"source":"main.js","original":{"line":34,"column":16}},{"generated":{"line":22,"column":21},"source":"main.js","original":{"line":34,"column":0}},{"name":"console","generated":{"line":23,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":23,"column":7},"source":"main.js","original":{"line":35,"column":7}},{"name":"log","generated":{"line":23,"column":8},"source":"main.js","original":{"line":35,"column":8}},{"generated":{"line":23,"column":11},"source":"main.js","original":{"line":35,"column":0}},{"name":"str","generated":{"line":23,"column":12},"source":"main.js","original":{"line":35,"column":12}},{"generated":{"line":23,"column":15},"source":"main.js","original":{"line":35,"column":15}},{"name":"match","generated":{"line":23,"column":16},"source":"main.js","original":{"line":35,"column":16}},{"generated":{"line":23,"column":21},"source":"main.js","original":{"line":35,"column":12}},{"name":"regexp2","generated":{"line":23,"column":22},"source":"main.js","original":{"line":35,"column":22}},{"generated":{"line":23,"column":29},"source":"main.js","original":{"line":35,"column":12}},{"generated":{"line":23,"column":30},"source":"main.js","original":{"line":35,"column":0}}],"sources":{"main.js":"console.log(123);\r\n\r\n// const regexp1 = new RegExp(\"^abc\")\r\n// // new RegExp(표현식)\r\n\r\n// const regexp2 = new RegExp(\"^abc\", \"gi\")\r\n// // new RegExp(표현식, 플래그)\r\n\r\n// const regexp1 = /^abc/;\r\n// // /표현식/\r\n\r\n// const regexp2 = /^abc/gi\r\n// 표현식/플래그\r\n\r\n// 정규표현식\r\nconst str = `\r\n010-1234-5678\r\nhello@gmail.com;\r\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\r\nThe quick brown fox jumps over the lazy dog.\r\nabbcccdddd\r\n`\r\n// 대소문자 따져서 검색\r\n// 생성자 방식\r\n// const regexp = new RegExp('the', 'g')\r\n// 리터럴 방식\r\nconst regexp = /the/g\r\nconsole.log(str.match(regexp))\r\n\r\n// 대소문자 안가리고 검색\r\n// 생성자 방식\r\n// const regexp2 = new RegExp('the', 'gi')\r\n// 리터럴 방식\r\nconst regexp2 = /the/gi\r\nconsole.log(str.match(regexp2))"},"lineCount":null}},"error":null,"hash":"96cbbf3d1e72f6d9eb960c874c8a97cd","cacheData":{"env":{}}}