{"id":"main.js","dependencies":[{"name":"D:\\VsCode\\regexp\\package.json","includedInParent":true,"mtime":1623068759198}],"generated":{"js":"console.log(123); // const regexp1 = new RegExp(\"^abc\")\n// // new RegExp(표현식)\n// const regexp2 = new RegExp(\"^abc\", \"gi\")\n// // new RegExp(표현식, 플래그)\n// const regexp1 = /^abc/;\n// // /표현식/\n// const regexp2 = /^abc/gi\n// 표현식/플래그\n// 정규표현식\n\nvar str = \"\\n010-1234-5678\\nhello@gmail.com;\\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\\nThe quick brown fox jumps over the lazy dog.\\nabbcccdddd\\n\"; // 대소문자 따져서 검색\n// 생성자 방식\n// const regexp = new RegExp('the', 'g')\n// 리터럴 방식\n// const regexp = /the/g\n// console.log(str.match(regexp))\n// // 대소문자 안가리고 검색\n// // 생성자 방식\n// // const regexp2 = new RegExp('the', 'gi')\n// // 리터럴 방식\n// const regexp2 = /the/gi\n// console.log(str.match(regexp2))\n// test(): boolean 값으로 반환\n\nvar regexp = /fox/gi;\nconsole.log(regexp.test(str)); // replace 문자 대체\n\nconsole.log(str.replace(regexp, 'AAA'));"},"sourceMaps":{"js":{"mappings":[{"name":"console","generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":7},"source":"main.js","original":{"line":1,"column":7}},{"name":"log","generated":{"line":1,"column":8},"source":"main.js","original":{"line":1,"column":8}},{"generated":{"line":1,"column":11},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":12},"source":"main.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":15},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":18},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"name":"str","generated":{"line":11,"column":4},"source":"main.js","original":{"line":16,"column":6}},{"generated":{"line":11,"column":7},"source":"main.js","original":{"line":16,"column":9}},{"generated":{"line":11,"column":156},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":11,"column":158},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":37,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":38,"column":0}},{"name":"regexp","generated":{"line":25,"column":4},"source":"main.js","original":{"line":38,"column":6}},{"generated":{"line":25,"column":10},"source":"main.js","original":{"line":38,"column":12}},{"generated":{"line":25,"column":13},"source":"main.js","original":{"line":38,"column":15}},{"generated":{"line":25,"column":20},"source":"main.js","original":{"line":38,"column":0}},{"name":"console","generated":{"line":26,"column":0},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":26,"column":7},"source":"main.js","original":{"line":39,"column":7}},{"name":"log","generated":{"line":26,"column":8},"source":"main.js","original":{"line":39,"column":8}},{"generated":{"line":26,"column":11},"source":"main.js","original":{"line":39,"column":0}},{"name":"regexp","generated":{"line":26,"column":12},"source":"main.js","original":{"line":39,"column":12}},{"generated":{"line":26,"column":18},"source":"main.js","original":{"line":39,"column":18}},{"name":"test","generated":{"line":26,"column":19},"source":"main.js","original":{"line":39,"column":19}},{"generated":{"line":26,"column":23},"source":"main.js","original":{"line":39,"column":12}},{"name":"str","generated":{"line":26,"column":24},"source":"main.js","original":{"line":39,"column":24}},{"generated":{"line":26,"column":27},"source":"main.js","original":{"line":39,"column":12}},{"generated":{"line":26,"column":28},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":26,"column":31},"source":"main.js","original":{"line":41,"column":0}},{"name":"console","generated":{"line":28,"column":0},"source":"main.js","original":{"line":42,"column":0}},{"generated":{"line":28,"column":7},"source":"main.js","original":{"line":42,"column":7}},{"name":"log","generated":{"line":28,"column":8},"source":"main.js","original":{"line":42,"column":8}},{"generated":{"line":28,"column":11},"source":"main.js","original":{"line":42,"column":0}},{"name":"str","generated":{"line":28,"column":12},"source":"main.js","original":{"line":42,"column":12}},{"generated":{"line":28,"column":15},"source":"main.js","original":{"line":42,"column":15}},{"name":"replace","generated":{"line":28,"column":16},"source":"main.js","original":{"line":42,"column":16}},{"generated":{"line":28,"column":23},"source":"main.js","original":{"line":42,"column":12}},{"name":"regexp","generated":{"line":28,"column":24},"source":"main.js","original":{"line":42,"column":24}},{"generated":{"line":28,"column":30},"source":"main.js","original":{"line":42,"column":12}},{"generated":{"line":28,"column":32},"source":"main.js","original":{"line":42,"column":32}},{"generated":{"line":28,"column":37},"source":"main.js","original":{"line":42,"column":12}},{"generated":{"line":28,"column":38},"source":"main.js","original":{"line":42,"column":0}}],"sources":{"main.js":"console.log(123);\r\n\r\n// const regexp1 = new RegExp(\"^abc\")\r\n// // new RegExp(표현식)\r\n\r\n// const regexp2 = new RegExp(\"^abc\", \"gi\")\r\n// // new RegExp(표현식, 플래그)\r\n\r\n// const regexp1 = /^abc/;\r\n// // /표현식/\r\n\r\n// const regexp2 = /^abc/gi\r\n// 표현식/플래그\r\n\r\n// 정규표현식\r\nconst str = `\r\n010-1234-5678\r\nhello@gmail.com;\r\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\r\nThe quick brown fox jumps over the lazy dog.\r\nabbcccdddd\r\n`\r\n// 대소문자 따져서 검색\r\n// 생성자 방식\r\n// const regexp = new RegExp('the', 'g')\r\n// 리터럴 방식\r\n// const regexp = /the/g\r\n// console.log(str.match(regexp))\r\n\r\n// // 대소문자 안가리고 검색\r\n// // 생성자 방식\r\n// // const regexp2 = new RegExp('the', 'gi')\r\n// // 리터럴 방식\r\n// const regexp2 = /the/gi\r\n// console.log(str.match(regexp2))\r\n\r\n// test(): boolean 값으로 반환\r\nconst regexp = /fox/gi\r\nconsole.log(regexp.test(str))\r\n\r\n// replace 문자 대체\r\nconsole.log(str.replace(regexp, 'AAA'))"},"lineCount":null}},"error":null,"hash":"1b5a9da6ff53906365e3487c78592c10","cacheData":{"env":{}}}